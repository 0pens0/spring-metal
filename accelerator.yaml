accelerator:
  displayName: GenAi RAG application with Tanzu Platform
  description: Accelerator for onboarding a  GenAI RAG application to the Tanzu Platform
  iconUrl: https://raw.githubusercontent.com/cpage-pivotal/dallecool/main/config/ai.png
  tags:
    - java
    - spring
    - cloud-native-devs
    - openai
    - llm
    - spring-ai

  imports:
    - name: tap-workload
  options:

  - name: vectorStore
    label: Vector Store
    inputType: select
    display: true
    inputType: select
    defaultValue: memory
    choices:
      - value: memory
        text: Simple (in memory)
      - value: pgvector
        text: PostgreSQL pgvector
  - name: autoConfigPGvector
    label: Use Spring AI to auto configure vector store initializer based on the PGVector instance binding
    inputType: checkbox
    dataType: boolean
    defaultValue: false
    dependsOn:
      name: vectorStore
      value: pgvector
  - name: addPrompt
    label: Use Spring AI to add prompt message retriever and context document
    inputType: checkbox
    dataType: boolean
    defaultValue: false
  - name: idkOptions
    label: Response behavior for unknown results 
    inputType: select
    defaultValue: idk
    choices:
      - value: idk
        text: State you do not know
      - value: model
        text: Pass through model best guess reply
      - value: idkModel
        text: State you do not know AND pass through model best guess reply
    dependsOn:
      name: addPrompt
  - name: addDocuments
    label: Always add relevant documents at the end of the reply
    inputType: checkbox
    dataType: boolean
    defaultValue: false
    dependsOn:
      name: addPrompt
  
  - name: llm
    label: LLM models selection
    required: true
    defaultValue: "platform"
    inputType: select
    choices:
      - value: platform
        text: Use the chat and embeddings models as defined in the GenAI service binding
      - value: chatCustom
        text: Use custom chat model (will require to modify your applications settings)
      - value: embeddingCustom
        text: Use custom embedding model (will require to modify your applications settings)

  - name: addAIMiddleware
    label: Add AI middleware capabilities
    inputType: checkbox
    display: true
    dataType: boolean
    defaultValue: false
  - name: addAIObservability
    label: Add app observability auto configurations
    inputType: checkbox
    dataType: boolean
    defaultValue: false
    dependsOn:
      name: addAIMiddleware
  - name: addAPIGW
    label: Add API Gateway with model's token rate limiting support
    inputType: checkbox
    dataType: boolean
    defaultValue: false
    dependsOn:
      name: addAIMiddleware
  - name: addFIPS
    label: Add FIPS complaince
    inputType: checkbox
    dataType: boolean
    defaultValue: false
    dependsOn:
      name: addAIMiddleware

  - name: runtime
    label: Deployment Runtime 
    required: true
    defaultValue: tpcf
    inputType: select
    choices:
      - value: tpcf
        text: Tanzu Platform for Cloud Foundry
      - value: tpk8s
        text: Tanzu Platform for K8s
      - value: tpVCF
        text: Taznu Platform with VCF Private AI

  

engine:
  chain:
    - merge:
        - include: [ "**/*" ]
          exclude: [ "config/*.yaml", "Tiltfile", "README.md", "catalog/*.yaml", ".github/workflows/**" ]
        - include: [ "Tiltfile" ]
          chain:
            - type: ReplaceText
              substitutions:
                - text: openai
                  with: "#artifactId.toLowerCase()"

        - include: [ "config/*.yaml" ]
          chain:
            - type: ReplaceText
              substitutions:
                - text: ": openai"
                  with: "': ' + #artifactId.toLowerCase()"
            - merge:
                - type: InvokeFragment
                  reference: tap-workload
                - include: [ "**" ]
              onConflict: UseFirst

        - include: [ "README.md" ]
          chain:
            - type: ReplaceText
              substitutions:
                - text: openai
                  with: "#artifactId"

        - include: [ "catalog/*.yaml" ]
          chain:
            - type: ReplaceText
              substitutions:
                - text: openai
                  with: "#artifactId"

    - type: Provenance
