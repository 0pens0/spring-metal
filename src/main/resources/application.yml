spring:
  datasource:
    url: jdbc:h2:mem:musicdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  data:
    jpa:
      repositories:
        enabled: true
---
spring:
  config:
    activate:
      on-profile: h2
  datasource:
    url: jdbc:h2:mem:musicdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
---
logging:
  level:
    root: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
---
spring:
  config:
    activate:
      on-profile: http2

server:
  http2:
    enabled: true
  port: 8443
  #ssl:
  #  enabled: true
  #  key-alias: demo
  #  key-store: classpath:keystore.bks
  #  key-store-password: changeit
  #  key-password: changeit
  #  key-store-type: "BCFKS"
    
---
spring:
  config:
    activate:
      on-profile: mysql
  datasource:
    url: "jdbc:mysql://localhost/music"
    driver-class-name: com.mysql.jdbc.Driver
    username:
    password:
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL55Dialect

---
spring:
  config:
    activate:
      on-profile: postgresql
  datasource:
    url: "jdbc:postgresql://localhost:15432/music"
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: password
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
